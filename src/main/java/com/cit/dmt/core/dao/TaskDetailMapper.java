package com.cit.dmt.core.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.cit.dmt.core.model.TaskDetail;
import com.github.pagehelper.Page;

public interface TaskDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    int insert(TaskDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    int insertSelective(TaskDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    TaskDetail selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    int updateByPrimaryKeySelective(TaskDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_detail
     *
     * @mbg.generated Thu Feb 25 21:10:27 NZDT 2021
     */
    int updateByPrimaryKey(TaskDetail record);
    Page<TaskDetail> selectPaged(Map<String, Object> criteria);
    int finalTrans(@Param("id") Long id, @Param("transResult") String transResult);
    int finalTransBatch(@Param("projectId") Long projectId, @Param("taskId") Long taskId, @Param("roundId") Long roundId, @Param("userId") Long userId);
	int insertBatch(@Param("taskDetails") List<TaskDetail> taskDetails, @Param("romanStatus") String romanStatus);
	int deleteBatch(@Param("projectId") Long projectId, @Param("taskId") Long taskId);
	Integer getTaskDetailAmount(@Param("projectId") Long projectId, @Param("taskId") Long taskId);
}